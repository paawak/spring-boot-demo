<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.swayam.demo.springbootdemo</groupId>
	<artifactId>restful-microservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>restful-microservice</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<swagger.version>2.10.0</swagger.version>
		<flyway.version>5.0.3</flyway.version>
		<jacoco.test.unit.dataFile>target/jacoco/jacoco.exe</jacoco.test.unit.dataFile>
	</properties>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.9</version>
				<configuration>
					<includes>
						<include>com/swayam/demo/springbootdemo/rest/**</include>
					</includes>
					<excludes>
						<exclude>com/swayam/demo/springbootdemo/rest/config/**</exclude>
						<exclude>com/swayam/demo/springbootdemo/rest/entity/**</exclude>
						<exclude>**/RestFulMicroserviceApplication.class</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<configuration>
							<destFile>${jacoco.test.unit.dataFile}</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.test.unit.dataFile}</dataFile>
							<outputDirectory>target/jacoco/site-unit-test</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>${flyway.version}</version>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flyway.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.2.11</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.2.11</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>docker.spotify</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<repository>docker.io/paawak/${project.artifactId}</repository>
							<tag>${project.version}</tag>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker.fabric8</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.23.0</version>
						<configuration>
							<images>
								<image>
									<name>docker.io/paawak/${project.artifactId}</name>
									<build>
										<dockerFileDir>${basedir}</dockerFileDir>
										<dockerFile>Dockerfile</dockerFile>
										<tags>
											<tag>${project.version}</tag>
											<tag>latest</tag>
										</tags>
									</build>
									<run>
										<ports>
											<port>9090:8080</port>
										</ports>
										<env>
											<MY_ENVIRONMENT_VAR>FOO</MY_ENVIRONMENT_VAR>
										</env>
										<wait>
											<http>
												<url>http://localhost:9090/${project.artifactId}/swagger-ui.html</url>
												<method>GET</method>
												<status>200</status>
											</http>
											<time>20000</time>
											<kill>1000</kill>
											<shutdown>1000</shutdown>
											<!-- <exec> <postStart></postStart> <preStop></preStop> </exec> -->
										</wait>
									</run>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>build-docker-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>start-container</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
							<execution>
								<id>push-docker-image</id>
								<phase>install</phase>
								<goals>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonar</id>
			<properties>
				<sonar.projectKey>${project.artifactId}</sonar.projectKey>
				<sonar.projectName>${project.artifactId}</sonar.projectName>
				<sonar.projectVersion>${project.version}</sonar.projectVersion>
				<sonar.host.url>http://192.168.1.4:9000/</sonar.host.url>
				<sonar.verbose>true</sonar.verbose>
				<sonar.showProfiling>true</sonar.showProfiling>
				<!-- Sonar plugin is BUGGY!! It will not run when the below property 
					is set <sonar.scanner.dumpToFile>target/sonar-properties.txt</sonar.scanner.dumpToFile> -->
				<!-- <sonar.login>admin</sonar.login> <sonar.password>admin</sonar.password> -->
				<sonar.sources>src/main/java</sonar.sources>
				<sonar.exclusions>
					**/com/swayam/demo/springbootdemo/rest/config/**,
					**/com/swayam/demo/springbootdemo/rest/entity/**,
					**/RestFulMicroserviceApplication.java
				</sonar.exclusions>
				<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
				<sonar.language>java</sonar.language>
				<sonar.tests>src/test/java</sonar.tests>
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
				<sonar.junit.reportPaths>target/surefire-reports</sonar.junit.reportPaths>
				<sonar.java.binaries>target/classes</sonar.java.binaries>
				<sonar.jacoco.reportPaths>${jacoco.test.unit.dataFile}</sonar.jacoco.reportPaths>
				<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>3.4.0.905</version>
						<executions>
							<execution>
								<goals>
									<goal>sonar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
